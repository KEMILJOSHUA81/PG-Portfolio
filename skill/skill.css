/* header h1{
    text-align: center;
} */
@property --progress-value {
    syntax: '<integer>';
    inherits: false;
    initial-value: 0;
  }
  
  @keyframes html-progress {
    to { --progress-value: 80; }
  }
  
  @keyframes css-progress {
    to { --progress-value: 80; }
  }
  
  @keyframes js-progress {
    to { --progress-value: 73; }
  }
  
  @keyframes java-progress {
    to { --progress-value: 88; }
  }

  @keyframes r-progress {
    to { --progress-value: 68; }
  }
  .progress-bar {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    
    /* to center the percentage value */
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .progress-bar::before {
    counter-reset: percentage var(--progress-value);
    content: counter(percentage) '%';
  }
  
  .html {
    background: 
      radial-gradient(closest-side, white 79%, transparent 80% 100%),
      conic-gradient(green calc(var(--progress-value) * 1%), white 0);
    animation: html-progress 2s 1 forwards;
  }
  
  .html::before {
    animation: html-progress 2s 1 forwards;
  }
  
  .css {
    background: 
      radial-gradient(closest-side, white 79%, transparent 80% 100%, white 0),
      conic-gradient(green calc(var(--progress-value) * 1%), white 0);
    animation: css-progress 2s 1 forwards;
  }
  
  .css::before {
    animation: css-progress 2s 1 forwards;
  }
  
  .js {
    background: 
      radial-gradient(closest-side, white 79%, transparent 80% 100%, white 0),
      conic-gradient(orange calc(var(--progress-value) * 1%), white 0);
    animation: js-progress 2s 1 forwards;
  }
  
  .js::before {
    animation: js-progress 2s 1 forwards;
  }

  .java {
    background: 
        radial-gradient(closest-side,  white 79%, transparent 80% 100%, white 0),
        conic-gradient(green calc(var(--progress-value) * 1%), white 0);
        animation: java-progress 2s 1 forwards;
  }

  .java::before {
    animation: java-progress 2s 1 forwards;
  }

  .r {
    background:
        radial-gradient(closest-side,  white 79%,  transparent 80% 100%,  white 0),
        conic-gradient(red calc(var(--progress-value) * 1%), white 0);
        animation: r-progress 2s 1 forwards;
  }

  .r::before {
    animation: r-progress 2s 1 forwards;
  }

  body {
    font-family: -apple-system, system-ui, Helvetica, Arial, sans-serif;
    margin: 50px auto;
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    max-width: 1000px;
  }
  
  h2 {
    text-align: center;
  }
  
  progress {
    visibility: hidden;
    width: 0;
    height: 0;
  }

  /* .navlist{
    display: flex;
}
.navlist a{
    display: inline-flex;
    font-size: var(--p-font);
    font-weight: 400;
    color: var(--text-color);
    margin: 21px 10px 6px 10px; 
    transition: all .6s ease;
}
.navlist a:hover{
    color: var(--other-color);
    transform: translateY(-6px);
} */
